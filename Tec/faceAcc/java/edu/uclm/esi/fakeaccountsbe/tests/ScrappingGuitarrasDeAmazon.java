package edu.uclm.esi.fakeaccountsbe.tests;

// Generated by Selenium IDE
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.openqa.selenium.By;
import org.openqa.selenium.By.ByXPath;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;

import java.util.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.TestInstance.Lifecycle;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;



@TestInstance(Lifecycle.PER_CLASS)
@TestMethodOrder(OrderAnnotation.class)
public class ScrappingGuitarrasDeAmazon {
	OrderAnnotation x;
	
	private WebDriver driverA;
	private Map<String, Object> vars;
	JavascriptExecutor jsA;
	private WebDriverWait waitA;

	
	@BeforeAll
	public void setUp() {
	    System.setProperty("webdriver.chrome.driver", "C:/Users/felip/Desktop/testingTECWEB/chromedriver-win64/chromedriver.exe");

	    ChromeOptions options = new ChromeOptions();
	    options.setBinary("C:/Users/felip/Desktop/testingTECWEB/chrome-win64/chrome.exe");
	    options.addArguments("--remote-allow-origins=*");

	    driverA = new ChromeDriver(options);  // Initialize driver here for each test
	    this.waitA = new WebDriverWait(driverA, Duration.ofSeconds(3));
	    jsA = (JavascriptExecutor) driverA;
	    
	    vars = new HashMap<String, Object>();
	    	    
	 // Open the first driver window and set its size and position on the left
	    driverA.get("https://www.amazon.es");
	    this.pausa(1000);
	 // Get the screen width to adjust window dimensions dynamically
	    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
	    int screenWidth = (int) screenSize.getWidth();
	    int halfWidth = screenWidth / 2; // Divide screen width by 2

	    // Set size for driverA and place it on the left
	    driverA.manage().window().setSize(new Dimension(halfWidth, 992)); // Half the screen width
	    driverA.manage().window().setPosition(new Point(0, 0)); // Left side of the screen

	}
  
	@AfterAll
	public void tearDown() {
		driverA.quit();
		}

	@Test @Order(1)
	public void testGuitarras() {
		WebElement btnCoockie=this.waitA.until(ExpectedConditions.visibilityOfElementLocated(By.id("sp-cc-accept")));
		btnCoockie.click();
		WebElement cajaBusqueda=this.waitA.until(ExpectedConditions.visibilityOfElementLocated(By.id("twotabsearchtextbox")));
		cajaBusqueda.sendKeys("guitarra el√©ctrica");
		
		btnCoockie=this.waitA.until(ExpectedConditions.visibilityOfElementLocated(By.id("nav-search-submit-button")));
		btnCoockie.click();
		
		List<WebElement> productos = this.driverA.findElements(By.className(""));
		//falta terminarlo
	}
	
	private void pausa(int tiempo) {
		try {
			Thread.sleep(tiempo);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}

